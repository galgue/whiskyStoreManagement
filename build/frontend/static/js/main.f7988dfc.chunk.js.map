{"version":3,"sources":["Components/RightToLeft.tsx","Components/Copyright.tsx","Components/Login.tsx","Components/Table.tsx","Pages/BatchesBarrel.tsx","Components/Routes.tsx","App.tsx","serviceWorker.js","index.js"],"names":["rightToLeft","create","plugins","jssPreset","rtl","RightToLeft","props","StylesProvider","jss","children","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","SignIn","classes","history","useHistory","Container","component","maxWidth","CssBaseline","className","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","onClick","replace","MAIN_ROUTE","Box","mt","BatchesTable","React","useState","columns","title","field","cellStyle","textAlign","lookup","34","63","data","surname","birthYear","birthCity","state","setState","style","direction","localization","toolbar","searchPlaceholder","header","actions","pagination","firstAriaLabel","firstTooltip","labelDisplayedRows","labelRowsPerPage","labelRowsSelect","lastTooltip","nextTooltip","previousTooltip","options","headerStyle","editable","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","createStyles","root","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginRight","easeOut","enteringScreen","websiteName","logOut","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","justifyContent","content","flexGrow","contentShift","marginLeft","BatchesBarrelPage","useTheme","open","setOpen","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","noWrap","LOGIN_ROUTE","Drawer","anchor","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","Routes","exact","path","render","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7988dfc.chunk.js","sourcesContent":["import { StylesProvider } from '@material-ui/styles';\r\nimport React, { ReactNode } from 'react';\r\nimport { create } from 'jss';\r\nimport { jssPreset, Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport rtl from 'jss-rtl';\r\n\r\n\r\n\r\nexport const rightToLeft = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nconst RightToLeft = (props: { children: ReactNode }) => {\r\n  return (\r\n      <StylesProvider jss={rightToLeft}>{props.children}</StylesProvider>\r\n  );\r\n}\r\n\r\nexport default RightToLeft;","import React from \"react\";\r\nimport { Typography, Link } from \"@material-ui/core\";\r\n\r\nexport const Copyright = () => {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright Â© '}\r\n        <Link color=\"inherit\" href=\"https://mh-distillery.com/he/\">\r\n          Milk&Honey\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }","import Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Copyright } from './Copyright';\r\nimport { MAIN_ROUTE, LOGIN_ROUTE } from './Routes';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', \r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport const SignIn = () => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\nconst handleClick = () => {\r\n    history.replace(MAIN_ROUTE);\r\n}\r\n\r\n  return <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          MILK & HONEY\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"××××\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"×¡××¡××\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <Button\r\n            onClick = {handleClick}\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            ××ª×××¨××ª\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright/>\r\n      </Box>\r\n    </Container>\r\n}","import React from 'react';\r\nimport MaterialTable, { Column, Options, Action } from 'material-table';\r\n\r\n\r\ninterface Row {\r\n    name: string;\r\n    surname: string;\r\n    birthYear: number;\r\n    birthCity: number;\r\n}\r\n\r\ninterface TableState {\r\n    columns: Array<Column<Row>>;\r\n    data: Row[];\r\n}\r\n\r\nexport const BatchesTable = () => {\r\n\r\n    const [state, setState] = React.useState<TableState>({\r\n        columns: [\r\n            {\r\n                title: '×©×', field: 'name', \r\n                cellStyle: {\r\n                    textAlign: 'right'\r\n                }\r\n            },\r\n            { title: '×©× ××©×¤××', field: 'surname', \r\n            cellStyle: {\r\n                textAlign: 'right'\r\n            } },\r\n            { title: '×©× ×ª ××××', field: 'birthYear', type: 'numeric', \r\n            cellStyle: {\r\n                textAlign: 'right'\r\n            } },\r\n            {\r\n                title: '××§×× ××××',\r\n                field: 'birthCity',\r\n                lookup: { 34: 'Ä°stanbul', 63: 'ÅanlÄ±urfa' }, \r\n                cellStyle: {\r\n                    textAlign: 'right'\r\n                }\r\n            },\r\n        ],\r\n        data: [\r\n            { name: '×××¡×', surname: '×©××¢××', birthYear: 1987, birthCity: 63 },\r\n            {\r\n                name: '×¢××¨×',\r\n                surname: '×× ×',\r\n                birthYear: 2017,\r\n                birthCity: 34,\r\n            },\r\n        ],\r\n    });\r\n    const options: Options = {\r\n        headerStyle: {\r\n            textAlign: 'right'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MaterialTable\r\n            title=\"××¦×××ª ××××ª\"\r\n            style={{ direction: 'rtl', textAlign: 'right' }}\r\n            localization={{\r\n                toolbar: {\r\n                    searchPlaceholder: '××¤×©'\r\n                },\r\n                header:{\r\n                    actions:'×¤×¢××××ª'\r\n                },\r\n                pagination:{\r\n                    firstAriaLabel:'×©××¨××ª',\r\n                    firstTooltip:'×¢××× ×¨××©××',\r\n                    labelDisplayedRows: '{from}-{to} ××ª×× {count}',\r\n                    labelRowsPerPage: '×©××¨××ª ××× ×¢×××',\r\n                    labelRowsSelect: '×©××¨××ª',\r\n                    lastTooltip: '×¢××× ×××¨××',\r\n                    nextTooltip: '×¢××× ×××',\r\n                    previousTooltip: '×¢××× ×§×××',\r\n\r\n                }\r\n            }}\r\n            columns={state.columns}\r\n            data={state.data}\r\n            options={options}\r\n            editable={{\r\n                onRowAdd: (newData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.push(newData);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            if (oldData) {\r\n                                setState((prevState) => {\r\n                                    const data = [...prevState.data];\r\n                                    data[data.indexOf(oldData)] = newData;\r\n                                    return { ...prevState, data };\r\n                                });\r\n                            }\r\n                        }, 600);\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            resolve();\r\n                            setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                            });\r\n                        }, 600);\r\n                    }),\r\n            }}\r\n        />\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { LOGIN_ROUTE } from '../Components/Routes';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { BatchesTable } from '../Components/Table';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginRight: drawerWidth,\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        websiteName: {\r\n            marginRight: '1vw'\r\n        },\r\n        logOut:{\r\n            color: 'white',\r\n            marginRight:'1020px'\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        drawerHeader: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n            justifyContent: 'flex-end',\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginRight: -drawerWidth,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create('margin', {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: -drawerWidth,\r\n        },\r\n    }),\r\n);\r\n\r\nexport const BatchesBarrelPage = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    let history = useHistory();\r\n\r\n    const handleLogOut = () =>{\r\n        history.replace(LOGIN_ROUTE);\r\n    }\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className = {classes.websiteName} variant=\"h6\" noWrap>\r\n                        Milk & Honey\r\n          </Typography>\r\n          <Button onClick = {handleLogOut} className = {classes.logOut}>\r\n          <Typography variant=\"h6\" noWrap>\r\n          ××ª× ×ª×§\r\n          </Typography>\r\n          <ExitToAppIcon/>\r\n          </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n               <BatchesTable/>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom';\r\nimport { SignIn } from './Login';\r\nimport { BatchesBarrelPage } from '../Pages/BatchesBarrel';\r\n\r\nexport const LOGIN_ROUTE = '/Login';\r\nexport const MAIN_ROUTE = '/Main';\r\n\r\nexport const Routes = () => {\r\n//     const redirection = (Component: JSX.Element, route: string) => {\r\n//         if (route === LOGIN_ROUTE) {\r\n//             return !appState.loggedUser ? Component : <Redirect to={USERS_MANAGEMENT_ROUTE} />\r\n//         }\r\n//         return appState.loggedUser ? Component : <Redirect to={LOGIN_ROUTE} />\r\n//     }\r\n\r\n    // return <>\r\n    //     <Redirect from='/' exact to={LOGIN_ROUTE} />\r\n    //     <Route path={LOGIN_ROUTE} render={() =>\r\n    //         redirection(<Login />, LOGIN_ROUTE)} />\r\n    //     <Route path={USERS_MANAGEMENT_ROUTE} render={() =>\r\n    //         redirection(<UsersManagement />, USERS_MANAGEMENT_ROUTE)} />\r\n    //     <Route path={BOOKS_MANAGEMENT_ROUTE} render={() =>\r\n    //         redirection(<BooksManagement />, BOOKS_MANAGEMENT_ROUTE)} />\r\n    //     <Route path={AUTHORS_MANAGEMENT_ROUTE} render={() =>\r\n    //         redirection(<AuthorsManagement />, AUTHORS_MANAGEMENT_ROUTE)} />\r\n    // </>\r\n\r\n    return <>\r\n    <Route exact path={LOGIN_ROUTE} render={() => <SignIn/>} />\r\n    <Route exact path = {MAIN_ROUTE} render={() => <BatchesBarrelPage/>} />\r\n    </>\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport RightToLeft from './Components/RightToLeft';\r\nimport { SignIn } from './Components/Login';\r\nimport { Routes } from './Components/Routes';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  return   <BrowserRouter>\r\n  <RightToLeft>\r\n  <Routes/>\r\n</RightToLeft>\r\n</BrowserRouter>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}